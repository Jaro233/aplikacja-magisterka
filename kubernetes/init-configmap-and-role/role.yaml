kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-9"
    "helm.sh/hook-delete-policy": before-hook-creation
  namespace: spring-petclinic
  name: namespace-reader
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-8"
    "helm.sh/hook-delete-policy": before-hook-creation
  name: namespace-reader-binding
  namespace: spring-petclinic
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ""
roleRef:
  kind: Role
  name: namespace-reader
  apiGroup: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-auth
  namespace: kube-system
data:
  mapRoles: |
    - rolearn: arn:aws:iam::941391622677:role/lambda_eks_role
      username: lambda

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lambda-access
  namespace: prod-db
rules:
  - apiGroups: [""]
    resources: ["pods/exec", "pods", "pods/log", "pods/status"]
    verbs: ["get", "watch", "list", "create", "delete"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lambda-user-role-binding
  namespace: prod-db
subjects:
  - kind: User
    name: lambda
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: lambda-access
  apiGroup: rbac.authorization.k8s.io
